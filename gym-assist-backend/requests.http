# =================================================================
# ARQUIVO DE TESTES DA API GYM ASSIST
# =================================================================
# 
# Instruções:
# 1. Preencha as variáveis na seção abaixo com os IDs do seu banco de dados.
# 2. Execute as requisições na ordem em que aparecem.
# 3. Requisições que dependem de token precisam que uma requisição de login
#    com o nome correspondente (ex: # @name loginAsTeacher) seja executada antes.
#
# =================================================================
# VARIÁVEIS GLOBAIS DE TESTE
# =================================================================

@baseUrl = http://localhost:3001/api

# IDs de Usuários (Pegue do seu DB com: SELECT id, name, email, role FROM users;)
@teacherId = f1d0e33c-dcf4-4330-a5f6-4e1a83c2a4a8
@studentId = 38e1fa9c-bbaf-4484-bc75-ae1ff0339f94

# ID de Grupo Muscular (Pegue do seu DB com: SELECT id, name FROM muscle_groups;)
@muscleGroupIdPeito = b7c201ca-e8f3-4d66-8206-9a53f006c654

# ID de Exercício (Pegue de uma requisição de criação ou do DB)
@customExerciseId = 1b7557a5-6d0c-42ba-b5a5-662c293c43ce
@baseExerciseId = 5ced45d4-3f14-4816-a0fa-ad18ce65743f


# =================================================================
# FLUXO 1: AUTENTICAÇÃO E PERFIL
# =================================================================

### Cadastrar um novo usuário (professor)
# Execute uma vez para criar o usuário, depois comente ou mude o e-mail.
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "name": "Professora Teste",
  "email": "prof.teste@email.com",
  "password": "senha123"
}

### Fazer login como Professor
# @name loginAsTeacher
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "prof.teste@email.com",
  "password": "senha123"
}

### Buscar o perfil do usuário logado (requer token)
GET {{baseUrl}}/profile
Authorization: Bearer {{loginAsTeacher.response.body.token}}


# =================================================================
# FLUXO 2: ASSOCIAÇÕES (Executado como Professor)
# =================================================================

### Adicionar um aluno a um professor
POST {{baseUrl}}/associations/student
Content-Type: application/json
Authorization: Bearer {{loginAsTeacher.response.body.token}}

{
  "studentName": "Aluno de Teste Via API",
  "studentEmail": "aluno.teste.api@email.com"
}


# =================================================================
# FLUXO 3: GERENCIAMENTO DE EXERCÍCIOS (Executado como Professor)
# =================================================================

### Cadastrar um novo exercício customizado
# @name createExercise
POST {{baseUrl}}/exercises/custom
Content-Type: application/json
Authorization: Bearer {{loginAsTeacher.response.body.token}}

{
  "name": "Meu Exercício de Teste",
  "muscleGroupId": "{{muscleGroupIdPeito}}"
}

### Atualizar um exercício customizado
PUT {{baseUrl}}/exercises/custom/{{createExercise.response.body.id}}
Content-Type: application/json
Authorization: Bearer {{loginAsTeacher.response.body.token}}

{
  "name": "Meu Exercício MODIFICADO",
  "muscleGroupId": "{{muscleGroupIdPeito}}"
}

### Deletar um exercício customizado
DELETE {{baseUrl}}/exercises/custom/{{createExercise.response.body.id}}
Authorization: Bearer {{loginAsTeacher.response.body.token}}


# =================================================================
# FLUXO 4: GERENCIAMENTO DE SÉRIES (Executado como Professor)
# =================================================================

### Criar uma nova série
POST {{baseUrl}}/series
Content-Type: application/json
Authorization: Bearer {{loginAsTeacher.response.body.token}}

{
  "name": "Minha Série de Teste via API",
  "exercises": [
    { "id": "{{baseExerciseId}}", "type": "base", "sets": "4", "reps": "10", "order": 1 },
    { "id": "{{customExerciseId}}", "type": "custom", "sets": "3", "reps": "12", "order": 2 }
  ]
}

### Listar todas as séries do professor
GET {{baseUrl}}/series
Authorization: Bearer {{loginAsTeacher.response.body.token}}


# =================================================================
# FLUXO 5: PLANO DE TREINO (Executado como Professor)
# =================================================================

### Buscar o plano de treino ativo do aluno
GET {{baseUrl}}/training-plans/active/{{studentId}}
Authorization: Bearer {{loginAsTeacher.response.body.token}}